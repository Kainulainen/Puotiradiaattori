@import "compass/css3";
@import "mixins";

$baseFont: 16px;
$planeWidth: 5rem;
$planeHeight: 6rem;

$s: "max-width: 550px";
$m: "max-width: 670px";
$l: "max-width: 920px";

$counterBorderThickness: 3px;
$counterBorderColor: #222;
$counterBackground: #fff;
$counterBoxShadow: inset 0 0 20px #000000;
$counterBorderRadius: 5px;

* {@include box-sizing(border-box);}

html {
  font-family: Helvetica,Arial;
  font-size: $baseFont;
  @include respond-to($s) {font-size: $baseFont / 4 !important;}
  @include respond-to($m) {font-size: $baseFont / 3 !important;}
  @include respond-to($l) {font-size: $baseFont / 1.5; }
}

body {
  @include carbonFibreBackground;
  text-align: center;
  color: #fff;
}

h1 {margin:0 auto; font:{size: 3rem; weight: normal}; color: #fff; @include text-shadow(0 1px 0 rgba(255, 255, 255, 0.3), 0 -1px 0 rgba(0, 0, 0, 0.8));}
#today {margin-bottom: 2rem;
  h1 {font-size: 4rem;}
}
#week, #month, #year, #total {@include transform(scale(0.7,0.7)); margin-top: -3rem;}

.disconnected {color: #f00;}

.unit {border:0; display: inline-block; color: #fff; @include text-shadow(0 1px 0 rgba(255, 255, 255, 0.3), 0 -1px 0 rgba(0, 0, 0, 0.4)); font-size: 4rem;}
.target {@include opacity(0); @include border-radius(5px); width: 40%; background: #fff; display: inline-block; font-size: 1.5em; padding: 0.5rem 1rem; color: #000000;
  &.show {@include opacity(1); @include single-transition(opacity, 2s, ease-out);}
  .value { color: #ff0000;
    &.reached {color: #008000;}
  }
}

.container {display: inline-block; width: auto; height: auto; overflow: hidden; position: relative; margin:0; padding:1px; border: $counterBorderThickness solid $counterBorderColor; @include border-radius($counterBorderRadius); background: $counterBackground; @include box-shadow($counterBoxShadow);}
.counter { @include scale(0.85,0.55); @include perspective(1000px); }
.spinner {position: relative; display: inline-block; top:0; width: $planeWidth; height: $planeHeight; margin-left: 1px; @include transform-style(preserve-3d); counter-reset: digits -1;
  &:nth-child(3n+3) {margin-left: 0.5rem;}
  &:last-child {margin-left:0;}
}

.digit {display: table; position: absolute;
  width: $planeWidth;
  height: $planeHeight;
  @include backface-visibility(hidden);
  border: 1px solid #ccc;
  @include border-radius(5px);
  @include background-image(linear-gradient(#ffffff, #cccccc, #aaaaaa));
  @include box-shadow(inset 0 0 5px #343434);

  .number {
    &:before {counter-increment: digits; content: counter(digits);};
    display: table-cell;
    vertical-align: middle;
    font: normal ($planeHeight / 1.5) Times, serif;
    color: #343434;
    text-align: center;
    text-shadow: 1px 1px #fff, -1px -1px #444;
  }
}

@for $digit from 0 through 9 {
   $angle: $digit * 36;
   $tenGonInRadius: 1.53884;
   $nthChildOfSpinner: $digit + 1;

   .digit:nth-child(#{$nthChildOfSpinner}) {@include transform(rotateX(#{$angle}deg) translateZ($planeHeight * $tenGonInRadius));}
   .roll-to-#{$digit} {@include transition(all 3s ease-in); @include transform(rotateX(-#{$angle}deg));}
}